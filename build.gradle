group 'tech.blueglacier'
version '1.0.7'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile([group: 'javax.mail', name: 'mail', version: '1.4.7'],
            [group: 'net.freeutils', name: 'jcharset', version: '2.0'],
            [group: 'org.apache.james', name: 'apache-mime4j-core', version: '0.8.0'],
            [group: 'org.apache.james', name: 'apache-mime4j-dom', version: '0.8.0'],
            [group: 'org.apache.james', name: 'apache-mime4j-storage', version: '0.8.0'],
            [group: 'org.apache.james', name: 'apache-mime4j-mbox-iterator', version: '0.8.0'],
            [group: 'commons-codec', name: 'commons-codec', version: '1.10'],
            [group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'],
            [group: 'commons-io', name: 'commons-io', version: '2.5'],
            [group: 'commons-configuration', name: 'commons-configuration', version: '1.10'],
            [group: 'ch.qos.logback', name: 'logback-core', version: '1.2.1'],
            [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'],
            [group: 'commons-collections', name: 'commons-collections', version: '3.2.2'],
            [group: 'com.google.guava', name: 'guava', version: '23.6-jre']
    )
    testCompile([group: 'org.testng', name: 'testng', version: '6.11'],
            [group: 'org.mockito', name: 'mockito-all', version: '1.10.19'],
            [group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'])
}

test {
    useTestNG()
    testLogging.showCauses = true;
    testLogging.showExceptions = true;
    testLogging.showStackTraces = true;
    testLogging.showStandardStreams = true;
    testLogging.exceptionFormat = 'full';
    testLogging.events "started", "passed", "skipped", "failed", "standardOut", "standardError";
}


task cleanDownloadedDependencies(type: Delete) {
    delete fileTree('dependencies')
    delete file('dependencies')
}

task copyDependencies(type: Copy) {
    dependsOn cleanDownloadedDependencies

    from configurations.compile
    into 'dependencies'

    from configurations.testCompile
    into 'dependencies'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
